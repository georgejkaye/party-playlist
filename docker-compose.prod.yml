version: "3.9"

networks:
  web:
    external: true
  internal:
    external: false

services:
  server:
    build:
      context: server
      dockerfile: Dockerfile.prod
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - 7000:7000
    environment:
      SERVER_PORT: ${SERVER_PORT}
      SPOTIFY_APP_ID: ${SPOTIFY_APP_ID}
      SPOTIFY_SECRET: /run/secrets/spotify_secret
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: /run/secrets/db_password
      DB_NAME: ${DB_NAME}
      ADMIN_PASSWORD_HASHED: /run/secrets/admin_password_hash
      SECRET_KEY: /run/secrets/api_secret
      CLIENT_URL: ${CLIENT_HOST}
    secrets:
      - spotify_secret
      - admin_password_hash
      - api_secret
    networks:
      - internal
  client:
    build:
      context: client
      dockerfile: Dockerfile.prod
      args:
        CLIENT_PORT: ${CLIENT_PORT}
        API_URL: "http://api:${API_PORT}"
        SERVER_URL: "http://server:${SERVER_PORT}"
        NEXT_PUBLIC_SPOTIFY_CLIENT_ID: ${SPOTIFY_APP_ID}
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    environment:
      API_URL: "http://api:${API_PORT}"
      SERVER_URL: "http://server:${SERVER_PORT}"
      CLIENT_PORT: ${CLIENT_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.playlist_client.rule=Host(`${CLIENT_HOST}`)"
      - "traefik.http.routers.playlist_client.tls=true"
      - "traefik.http.routers.playlist_client.tls.certresolver=lets-encrypt"
      - "traefik.http.services.playlist_client.loadbalancer.server.port=${CLIENT_PORT}"
    networks:
      - internal
      - web
    depends_on:
      - api

secrets:
  api_secret:
    file: api.secret
  spotify_secret:
    file: spotify.secret
  admin_password_hash:
    file: admin.secret
  db_passwd:
    file: db.secret