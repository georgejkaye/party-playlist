networks:
  internal:
    external: false
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: playlist
      POSTGRES_DB: playlist
      POSTGRES_PASSWORD: password
    ports:
      - "5001:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - internal
  server:
    build:
      context: server
      dockerfile: Dockerfile.dev
      args:
        SERVER_PORT_A: ${SERVER_PORT_A}
    ports:
      - "${SERVER_PORT_A}:${SERVER_PORT_A}"
    environment:
      SERVER_PORT_A: ${SERVER_PORT_A}
      SPOTIFY_APP_ID: ${SPOTIFY_APP_ID}
      SPOTIFY_SECRET: /run/secrets/spotify_secret
      DB_HOST: db
      DB_USER: playlist
      DB_PASSWORD: /run/secrets/db_password
      DB_NAME: playlist
      SECRET_KEY: /run/secrets/secret_key
      CLIENT_URL: http://localhost:${CLIENT_PORT}
    volumes:
      - ./server/src:/app/src
    secrets:
      - spotify_secret
      - secret_key
    networks:
      - internal
  client:
    build:
      context: client
      dockerfile: Dockerfile.dev
      args:
        CLIENT_PORT: ${CLIENT_PORT}
        SERVER_URL: "http://server:${SERVER_PORT_A}"
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    environment:
      CLIENT_PORT: ${CLIENT_PORT}
      SERVER_URL: "http://server:${SERVER_PORT_A}"
      NEXT_PUBLIC_SPOTIFY_CLIENT_ID: ${SPOTIFY_APP_ID}
      NEXT_PUBLIC_CLIENT_URL: "http://localhost:${CLIENT_PORT}"
      NEXT_PUBLIC_SERVER_URL: "http://server:${SERVER_PORT_A}"
    depends_on:
      - server
    volumes:
      - ./client/src:/app/src
    networks:
      - internal
secrets:
  secret_key:
    file: key.secret
  spotify_secret:
    file: spotify.secret
volumes:
  pgdata:
